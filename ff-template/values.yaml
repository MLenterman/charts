# Default values for ff-common.

replicaCount: 1

image:
  repository: "nexus.frankframework.org/frank-framework"
  pullPolicy: IfNotPresent
  tag: "7.8" # Default: .Chart.appVersion

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext: {}
#  fsGroup: 2000

securityContext: {}
#  capabilities:
#    drop:
#      - ALL
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  #    kubernetes.io/ingress.class: nginx
  #    kubernetes.io/tls-acme: 'true'
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
#    - secretName: chart-example-tls
#      hosts:
#        - chart-example.local

livenessProbe:
  initialDelaySeconds: 40
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

resources: {}
#  limits:
#    cpu: 2000m
#    memory: 4200M
#  requests:
#    cpu: 2000m
#    memory: 4200M

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

timeZone: Etc/UTC

frank:
  memory: 4G
  dtap:
    stage: TST # Options: LOC, DEV, TST, ACC, PRD
    side: ""
  credentials: {}
  instance:
    name: ""
  configurations:
    names: []
  #      - main
  security:
    http:
      authentication: "" # Options: '', localUsers, activeDirectory
      localUsers: {}
      #        - username: Tester
      #          password: ChangeMe!
      #          roles:
      #            - IbisTester
      activeDirectory:
        url: ""
        baseDn: ""
        roleMapping:
          tester: ""
          dataAdmin: ""
          admin: ""
          webService: ""
          observer: ""
  environmentVariables: {}

connections:
  jdbc:
  #    - name: ''
  #      type: ''
  #      host: ''
  #      port: ''
  #      database: ''
  #      username: ''
  #      password: ''
  #      ssl: ''
  jms:
#    - name: ''
#      type: ''
#      host: ''
#      port: ''

